# coding: utf-8

"""
    Skycoin REST API.

    Skycoin is a next-generation cryptocurrency.  # noqa: E501

    OpenAPI spec version: 0.25.1
    Contact: contact@skycoin.net
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class InlineObject(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'change_address': 'str',
        'hours_selection': 'ApiV1WalletTransactionHoursSelection',
        'ignore_unconfirmed': 'bool',
        'to': 'list[ApiV1WalletTransactionTo]',
        'wallet': 'ApiV1WalletTransactionWallet'
    }

    attribute_map = {
        'change_address': 'change_address',
        'hours_selection': 'hours_selection',
        'ignore_unconfirmed': 'ignore_unconfirmed',
        'to': 'to',
        'wallet': 'wallet'
    }

    def __init__(self, change_address=None, hours_selection=None, ignore_unconfirmed=None, to=None, wallet=None):  # noqa: E501
        """InlineObject - a model defined in OpenAPI"""  # noqa: E501

        self._change_address = None
        self._hours_selection = None
        self._ignore_unconfirmed = None
        self._to = None
        self._wallet = None
        self.discriminator = None

        if change_address is not None:
            self.change_address = change_address
        if hours_selection is not None:
            self.hours_selection = hours_selection
        if ignore_unconfirmed is not None:
            self.ignore_unconfirmed = ignore_unconfirmed
        if to is not None:
            self.to = to
        if wallet is not None:
            self.wallet = wallet

    @property
    def change_address(self):
        """Gets the change_address of this InlineObject.  # noqa: E501


        :return: The change_address of this InlineObject.  # noqa: E501
        :rtype: str
        """
        return self._change_address

    @change_address.setter
    def change_address(self, change_address):
        """Sets the change_address of this InlineObject.


        :param change_address: The change_address of this InlineObject.  # noqa: E501
        :type: str
        """

        self._change_address = change_address

    @property
    def hours_selection(self):
        """Gets the hours_selection of this InlineObject.  # noqa: E501


        :return: The hours_selection of this InlineObject.  # noqa: E501
        :rtype: ApiV1WalletTransactionHoursSelection
        """
        return self._hours_selection

    @hours_selection.setter
    def hours_selection(self, hours_selection):
        """Sets the hours_selection of this InlineObject.


        :param hours_selection: The hours_selection of this InlineObject.  # noqa: E501
        :type: ApiV1WalletTransactionHoursSelection
        """

        self._hours_selection = hours_selection

    @property
    def ignore_unconfirmed(self):
        """Gets the ignore_unconfirmed of this InlineObject.  # noqa: E501


        :return: The ignore_unconfirmed of this InlineObject.  # noqa: E501
        :rtype: bool
        """
        return self._ignore_unconfirmed

    @ignore_unconfirmed.setter
    def ignore_unconfirmed(self, ignore_unconfirmed):
        """Sets the ignore_unconfirmed of this InlineObject.


        :param ignore_unconfirmed: The ignore_unconfirmed of this InlineObject.  # noqa: E501
        :type: bool
        """

        self._ignore_unconfirmed = ignore_unconfirmed

    @property
    def to(self):
        """Gets the to of this InlineObject.  # noqa: E501


        :return: The to of this InlineObject.  # noqa: E501
        :rtype: list[ApiV1WalletTransactionTo]
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this InlineObject.


        :param to: The to of this InlineObject.  # noqa: E501
        :type: list[ApiV1WalletTransactionTo]
        """

        self._to = to

    @property
    def wallet(self):
        """Gets the wallet of this InlineObject.  # noqa: E501


        :return: The wallet of this InlineObject.  # noqa: E501
        :rtype: ApiV1WalletTransactionWallet
        """
        return self._wallet

    @wallet.setter
    def wallet(self, wallet):
        """Sets the wallet of this InlineObject.


        :param wallet: The wallet of this InlineObject.  # noqa: E501
        :type: ApiV1WalletTransactionWallet
        """

        self._wallet = wallet

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
